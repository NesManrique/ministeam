name: conduit
version: 0.4.2
id: conduit-0.4.2-6e342ef1fadc37fa7f167c42d1405154
license: BSD3
copyright:
maintainer: michael@snoyman.com
stability:
homepage: http://github.com/snoyberg/conduit
package-url:
description: Conduits are an approach to the streaming data problem. It is meant as an alternative to enumerators\/iterators, hoping to address the same issues with different trade-offs based on real-world experience with enumerators. For more information, see <http://www.yesodweb.com/book/conduits>.
             .
             Release history:
             .
             [0.4] Inspired by the design of the pipes package: we now have a single unified type underlying @Source@, @Sink@, and @Conduit@. This type is named @Pipe@. There are type synonyms provided for the other three types. Additionally, @BufferedSource@ is no longer provided. Instead, the connect-and-resume operator, @$$+@, can be used for the same purpose.
             .
             [0.3] ResourceT has been greatly simplified, specialized for IO, and moved into a separate package. Instead of hard-coding ResourceT into the conduit datatypes, they can now live around any monad. The Conduit datatype has been enhanced to better allow generation of streaming output. The SourceResult, SinkResult, and ConduitResult datatypes have been removed entirely.
             .
             [0.2] Instead of storing state in mutable variables, we now use CPS. A @Source@ returns the next @Source@, and likewise for @Sink@s and @Conduit@s. Not only does this take better advantage of GHC\'s optimizations (about a 20% speedup), but it allows some operations to have a reduction in algorithmic complexity from exponential to linear. This also allowed us to remove the @Prepared@ set of types. Also, the @State@ functions (e.g., @sinkState@) use better constructors for return types, avoiding the need for a dummy state on completion.
             .
             [0.1] @BufferedSource@ is now an abstract type, and has a much more efficient internal representation. The result was a 41% speedup on microbenchmarks (note: do not expect speedups anywhere near that in real usage). In general, we are moving towards @BufferedSource@ being a specific tool used internally as needed, but using @Source@ for all external APIs.
             .
             [0.0] Initial release.
category: Data, Conduit
author: Michael Snoyman
exposed: True
exposed-modules: Data.Conduit Data.Conduit.Binary Data.Conduit.Text
                 Data.Conduit.List Data.Conduit.Lazy Data.Conduit.Internal
hidden-modules: System.PosixFile Data.Conduit.Util.Source
                Data.Conduit.Util.Sink Data.Conduit.Util.Conduit
import-dirs: /media/HonDa/Documents/Trabajos/USB/Abril-Julio2012/DesarrolloWeb/ministeam/cabal-dev//lib/conduit-0.4.2/ghc-7.0.3
library-dirs: /media/HonDa/Documents/Trabajos/USB/Abril-Julio2012/DesarrolloWeb/ministeam/cabal-dev//lib/conduit-0.4.2/ghc-7.0.3
hs-libraries: HSconduit-0.4.2
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.3.1.0-91c3839608ff4d3ec95f734c5ae4f31c
         bytestring-0.9.1.10-6aa1efbfa95d1689fc03d61e7c4b27c4
         containers-0.4.0.0-b4885363abca642443ccd842502a3b7e
         lifted-base-0.1.1-b27e32579976aed3648d65d1afef26e1
         monad-control-0.3.1.3-174f99215c3ff466d60c39e76668f602
         resourcet-0.3.3.1-04b790aaa4b55d56727d3b9c5b29d41f
         text-0.11.2.2-47dd5ac9cad8e9686ba40a5f047c6d7f
         transformers-0.2.2.0-4bbbfde1fb5c4eb17cdb1963dda698f3
         transformers-base-0.4.1-8b290a908eab8ad8dd4d028cddea8c7f
         void-0.5.6-060eb7fff0a425e5202213350432b0c3
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /media/HonDa/Documents/Trabajos/USB/Abril-Julio2012/DesarrolloWeb/ministeam/cabal-dev//share/doc/conduit-0.4.2/html/conduit.haddock
haddock-html: /media/HonDa/Documents/Trabajos/USB/Abril-Julio2012/DesarrolloWeb/ministeam/cabal-dev//share/doc/conduit-0.4.2/html
